@using TennisApplication.Others
@using Microsoft.AspNetCore.Mvc.Rendering
@model TournamentCourse
@{
    ViewData["Title"] = "Ongoing tournament";

}

<h1>Ongoing tournament</h1>
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <title>accordion demo</title>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.12.4.js"></script>
    <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
</head>

<body>

@{
    var iterator = 0;
    var tournamentCourse = Model;
}
<div id="accordion"> 
@using (Html.BeginForm("GetResultsTournament", "CourseTournament", FormMethod.Post))
{
    
    @Html.Hidden("TournamentId", tournamentCourse.Tournament.Id)
@for (int round = 0; round < tournamentCourse.CurrentRound; round++)
{

    var bodyId = "Body" + round;
    bool editable = round + 1 == tournamentCourse.CurrentRound && !tournamentCourse.IsFinished;
    var header = editable ? tournamentCourse.RoundsName[round] : tournamentCourse.RoundsName[round] + " - FINISHED";
    var openCollapse = tournamentCourse.CurrentRound - 1 == round ? "collapse show" : "collapse";

    <div class="card">
        <div class="card-header" id="@round">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#@bodyId" aria-expanded="true" aria-controls="@bodyId">
                    @header
                </button>
            </h5>
        </div>
    </div>

    
    <div id="@bodyId" class="@openCollapse" aria-labelledby="@round" data-parent="#accordion">
        <div class="card-body">
            <div>
                <table class="table">
                    <tr>
                        <th>
                            <label>Player 1</label>
                        </th>
                        <th>
                            <label>Player 2</label>
                        </th>
                        <th>
                            <label>Winner</label>
                        </th>
                        <th>
                            <label>Result</label>
                        </th>
                    </tr>
                    <tbody>




                    @{
                        var matchesInRound = tournamentCourse.Matches.Where(m => m.Round == round + 1).ToList().Count;
                    }

                    @for (int i = 0; i < matchesInRound; i++)
                    {

                        var player1 = tournamentCourse.Matches[iterator].Player1.FirstName 
                                      + " " + tournamentCourse.Matches[iterator].Player1.LastName;
                        var player2 = tournamentCourse.Matches[iterator].Player2.FirstName 
                                      + " " + tournamentCourse.Matches[iterator].Player2.LastName;
                        
                        @Html.Hidden("MatchDto[" + iterator + "].Id", tournamentCourse.Matches[iterator].Id)

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => player1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => player2)
                            </td>

                            <td>
                                @Html.DropDownListFor(modelItem => modelItem.Matches[iterator].Winner,
                                    Enum.GetNames(typeof(Winner)).Select(name => new SelectListItem()
                                    {
                                        Text = name,
                                        Value = name
                                    }))
                            </td>
                            <td>
                                @Html.TextBoxFor(modelItem => modelItem.Matches[iterator].Result,
                                    new {type = "string", required = string.Empty}
                                    )

                            </td>
                            
                            
                            
                            @*<td>
                                                @Html.DropDownListFor(modelItem => modelItem.Matches[iterator].Winner,
                                                    Enum.GetNames(typeof(Winner)).Select(name => new SelectListItem()
                                                    {
                                                        Text = name,
                                                        Value = name
                                                    }), 
                                                    editable ? 
                                                        (object) new { } : new {disabled = true })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => modelItem.Matches[iterator].Result,
                                                    editable ? 
                                                        (object) new { type = "string", required = string.Empty} 
                                                        : 
                                                        new {type = "string", required = string.Empty, disabled = true }
                                                    )
                
                                            </td>*@

                            @*@if (editable)
                                            {
                                                <td>
                                                    @Html.DropDownListFor(modelItem => tournamentCourse.Matches[iterator].Winner,
                                                        Enum.GetNames(typeof(Winner)).Select(name => new SelectListItem()
                                                        {
                                                            Text = name,
                                                            Value = name
                                                        }))
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(modelItem => tournamentCourse.Matches[iterator].Result,
                                                        new {type = "string", required = string.Empty })
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                
                                                    @Html.DropDownListFor(modelItem => tournamentCourse.Matches[iterator].Winner,
                                                        Enum.GetNames(typeof(Winner)).Select(name => new SelectListItem()
                                                        {
                                                            Text = name,
                                                            Value = name
                                                        }), new
                                                        {
                                                            disabled = "true"
                                                        })
                                                </td>
                                                
                                                <td>
                                                    @Html.TextBoxFor(modelItem => tournamentCourse.Matches[iterator].Result,
                                                        new {type = "string", required = string.Empty, disabled = "true"})
                                                </td>
                                            }*@




                        </tr>
                        iterator++;
                    }




                    </tbody>
                </table>
            </div>
        </div>
    </div>




}
    @if (!tournamentCourse.IsFinished)
    {
        <input type="submit" class="btn btn-info my-4 btn-block" value="Save results">
    }
}
</div>

</body>
</html>