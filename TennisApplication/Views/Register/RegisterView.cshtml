@model TennisApplication.Dtos.User.UserCreateDto

@{
    ViewData["Title"] = "Create new user";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="js/fileScript.js"></script>
<html>
<body>
<div class="container">
    <div class="row justify-content-center align-items-center">
        <div class="col-md-6">
            <div class="col-md-12 border border-light p-5">
                @using (Html.BeginForm("CreateUser", "Register", FormMethod.Post, new
                {
                    enctype = "multipart/form-data"
                }))
                {
                    <div class="form-group">
                        <h3 class="text-center text-info">Sign up</h3>
                    </div>
                    
                    <div class="row">
                        <div class="col">
                            @Html.TextBoxFor(u => u.FirstName, new { 
                                required = string.Empty, 
                                @class = "form-control mt-4",
                                placeholder= "First name",
                                style="border-color: #17a2b8"
                                    
                            })
                            @Html.ValidationMessageFor(u => u.FirstName, "", new {@class = "text-danger"})
                        </div>
                        <div class="col">
                            @Html.TextBoxFor(u => u.LastName, new
                            {
                                required = string.Empty,
                                @class = "form-control mt-4",
                                placeholder= "Last name",
                                style="border-color: #17a2b8"
                            })
                            @Html.ValidationMessageFor(u => u.LastName, "", new {@class = "text-danger"})
                        </div>
                        
                    </div>
                    
                    <div class="form-group">
                        @Html.TextBoxFor(u => u.EMail, new
                        {
                            required = string.Empty,
                            @class = "form-control mt-4",
                            placeholder = "E-mail",
                            style="border-color: #17a2b8"
                        })
                        @Html.ValidationMessageFor(u => u.EMail, "", new {@class = "text-danger"})
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <span class="text-danger">
                                @ViewData.ModelState["EMailExists"].Errors[0].ErrorMessage
                            </span>
                        }
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(u => u.Password, new
                        {
                            required = string.Empty,
                            @class = "form-control mt-4",
                            placeholder = "Password",
                            style="border-color: #17a2b8"
                        
                        })
                        @Html.ValidationMessageFor(u => u.Password, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(u => u.ConfirmPassword, new
                        {
                            required = string.Empty,
                            @class = "form-control mt-4",
                            placeholder = "Confirm password",
                            style="border-color: #17a2b8"
                        
                        })
                        @Html.ValidationMessageFor(u => u.ConfirmPassword, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        <select asp-for="Role" asp-items="@Html.GetEnumSelectList<Role>()" class="form-control mt-4" style="border-color: #17a2b8">
                                        
                        </select>
                    </div>
                    <div class="form-group">
                        <div class="text-left">
                            <div class="btn btn-outline-secondary btn-block mt-4" style="border-color: #17a2b8">
                                <label for="upload" class="my-text-color" id="choose-file-label">
                                    Choose photo
                                </label>
                                <input type="file" id="upload" style="display: none" name="upload"/>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-thumbnail" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                @*<span id="description"></span>*@
                            </div>
                        </div>
                        
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-info my-4 btn-block mt-4" style = "border-radius: 10px" value="Sign up"> 
                    </div>
                    
                }
            </div>
        </div>
    </div>
</div>


</body>

</html>