@model TennisApplication.Dtos.Tournament.TournamentCreateDto
@{
    if (Model != null)
    {
        ViewData["Title"] = "Edit tournament";
    }
    else
    {
        ViewData["Title"] = "Create tournament";
    }
}
@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
}
<html>
<body>

<div class="container">
    <div class="row justify-content-center align-items-center">
        <div class="col-md-6">
            <div class="col-md-12 border border-light p-5">
                @using (Html.BeginForm("CreateTournament", "Tournament", FormMethod.Post))
                {
                    if (Model != null)
                    {
                        <h3 class="text-center text-info mb-4">Edit tournament</h3>
                        @Html.HiddenFor(t => t.Id)
                    }
                    else
                    {
                        <h3 class="text-center text-info mb-4">Create tournament</h3>
                    }
                    
                    <div class="form-group">
                        <div class="mt-4">
                            <div class="my-text-color font-weight-bold">
                                @Html.Label("Name of the tournament")
                            </div>
                            
                        </div>
                        @Html.TextBoxFor(t => t.Name, new
                        {
                            required = string.Empty,
                            @class = "form-control",
                            placeholder = "Enter tournament name",
                            style="border-color: #17a2b8"
                        })
                        @Html.ValidationMessageFor(t => t.Name, "", new {@class = "text-danger"})
                    </div>
                    
                    <div class="form-group">
                        <div class="mt-4">
                            <div class="my-text-color font-weight-bold">
                                @Html.Label("Tournament address")
                            </div>
                            
                        </div>
                        @Html.TextBoxFor(t => t.Place, new
                        {
                            required = string.Empty,
                            @class = "form-control", placeholder = "Enter tournament address",style="border-color: #17a2b8"
                        })
                        @Html.ValidationMessageFor(t => t.Place, "", new {@class = "text-danger"})
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <span class="text-danger">
                                @ViewData.ModelState["WrongEMailOrPassword"].Errors[0].ErrorMessage
                            </span>
                        }
                    </div>
                    
                    
                    <div class="form-group">
                        <div class="mt-4">
                            <div class="my-text-color font-weight-bold">
                                @Html.Label("Date of the tournament")
                            </div>
                        </div>
                        @if (Model != null)
                        {
                            @Html.EditorFor(model => model.Date, new
                            {
                                htmlAttributes = new {@class = "form-control", style="border-color: #17a2b8"}
                            })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Date, new
                            {
                                htmlAttributes = new {required = string.Empty, @class = "form-control", style="border-color: #17a2b8"}
                            })
                        }
                        @Html.ValidationMessageFor(t => t.Date, "", new {@class = "text-danger"})
                    </div>
                    <div>
                        <div class="mt-4">
                            <div class="my-text-color font-weight-bold">
                                @Html.Label("Draw size")
                            </div>
                            
                        </div>
                        @Html.TextBoxFor(t => t.DrawSize, new
                        {
                            type = "number",
                            required = string.Empty,
                            @class = "form-control",
                            placeholder = "Enter draw size",
                            style="border-color: #17a2b8"
                        })
                        @Html.ValidationMessageFor(t => t.DrawSize, "", new {@class = "text-danger"})
                    </div>
                    <div>
                        @if (Model != null)
                        {
                            <input type="submit" class="btn btn-info my-4 btn-block mt-4" style="border-radius: 10px" value="Edit tournament">   
                        }
                        else
                        {
                            <input type="submit" class="btn btn-info my-4 btn-block mt-4" style="border-radius: 10px" value="Create tournament">   
                        }
                    </div>
                    
                    
                }
            </div>
        </div>
    </div>
</div>

</body>
</html>